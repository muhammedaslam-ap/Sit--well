
<%- include('../../views/partials/admin/header.ejs') %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.css">
        <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
        <script src="https://unpkg.com/cropperjs"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <body>
                <% if (locals.error) { %>
                    <div class="alert alert-danger"><%= error %></div>
                <% } %>
                <% if (locals.success) { %>
                    <div class="alert alert-success"><%= success %></div>
                <% } %>
                <% if (successMessage && successMessage.length) { %>
                    <script>
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: '<%= successMessage %>',
                            confirmButtonText: 'OK'
                        });
                    </script>
                <% } %>
                
                <% if (errorMessage && errorMessage.length) { %>
                    <script>
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: '<%= errorMessage %>',
                            confirmButtonText: 'OK'
                        });
                    </script>
                <% } %>
            <section class="content-main">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name" value="<%= product.productName %>">
                                <div id="productName-error" class="error-message"></div>
                            </div>
        
                            <div class="mb-4">
                                <label class="form-label">Full Description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control" rows="4"><%= product.description %></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
        
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular Price</label>
                                        <input placeholder="$" name="regularPrice" type="text" class="form-control" value="<%= product.regularPrice %>">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale Price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control" value="<%= product.salePrice %>">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control" value="<%= product.quantity %>">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
        
                            <div class="mb-4">
                                <label class="form-label">Color</label>
                                <input name="color" type="text" class="form-control" value="<%= product.color %>">
                                <div id="color-error" class="error-message"></div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3 ">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category" alt="Choose">
                                                <option value="" disabled selected>Choose a category</option>
                                                <% for (i=0;i<cat.length;i++) { %>
                                                    <option value="<%= cat[i].name %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Image Preview and Upload Section -->
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <% for(let i = 0; i < product.productImage.length; i++) { %>
                                        <div class="col-md-12">
                                            <div class="mb-4">
                                                <div class="thumbnails-container">
                                                    <input type="hidden" value="<%= product.productImage[i] %>" id="imageDatas">
                                                    <img class="rounded" style="width: 50px; height: 60px;"  src="/uploads/product-images/<%= product.productImage[i] %>" alt="Product Image">
                                                    <i onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" style="position: absolute; margin-left: 0%; cursor: pointer;" class="fa-thin fa-x"></i>                                            </div>
                                        </div>
                                        <% } %>
                                    </div>
                                    <div class="row">
                                        <!-- Image 1 -->
                                        <div class="col-lg-6 mb-4">
                                      
                                            <input class="form-control" type="file" name="images" id="imageInput" accept="image/png, image/jpeg, image/jpg" onchange="viewImage2(event),viewImage(event, 2) "multiple>
                                            <div id="addedImagesContainer"></div>
                                            <div id="croppedImageContainer2" class="image-cropper mt-2" style="display:none;">
                                                <img src="" id="croppedImg2" alt="">
                                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save Cropped</button>
                                            </div>
                                        
                                            <div id="images-error" class="error-message"></div>
                                        </div>
        
                                    </div>
                                </div>
                            </div>
        
                            <div class="mb-4">
                                <button type="submit" class="btn">Submit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <a href="/admin/products"><button class="btn btn-danger cursor: pointer">cancel</button></a>
                            </div>
                          
                        </form>
                    </div>
                </div>
            </section>
        </body>
        
        </html>
        
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    
    
            
    
    
    <script>
    
    
        function validateAndSubmit() {
        if (validateForm()) {
           document.forms[0].submit();
        }
        }
        
        
        
        
        function validateForm() {
           let imageDatas = false
                   console.log("validate form");
                   clearErrorMessages();
                   const name = document.getElementsByName('productName')[0].value;
                   const description = document.getElementsByName('descriptionData')[0].value;
                   const brand = document.getElementsByName('brand')[0].value;
                   const price = document.getElementsByName('regularPrice')[0].value;
                   const saleprice = document.getElementsByName('salePrice')[0].value;
                   const color = document.getElementsByName('color')[0].value;
                   const category = document.getElementsByName('category')[0].value;
                   const images = document.getElementById('input1')
                   const quantity=document.getElementsByName('quantity')
        imageDatas = document.getElementById("imageDatas")?.value;
                   let isValid = true;    
                   if (name.trim() === "") {
           displayErrorMessage('productName-error', 'Please enter a product name.');
           isValid = false;
        }
                  
                   if (description=== '') {
                       displayErrorMessage('description-error', 'Please enter a product description.');
                       isValid = false;
                   } 
        
        
                   if ( parseInt(quantity) < 0) {
                       displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                       isValid = false;
                   }
        
                   if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                       displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                       isValid = false;
                   }
                  if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                       displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                       isValid = false;
                   }
                  
                   if (color.trim() === "") {
                       displayErrorMessage('color-error', 'Please enter a color.');
                       isValid = false;
                   }
                   if (!imageDatas && images.files.length === 0) {
                       displayErrorMessage("images-error",'Please select an image.');
                       isValid = false;
                   }
                   return isValid;
               }
              
               function displayErrorMessage(elementId, message) {
                   var errorElement = document.getElementById(elementId);
                   errorElement.innerText = message;
                   errorElement.style.display = "block";
               }
        
        
               function clearErrorMessages() {
                   const errorElements = document.getElementsByClassName('error-message');
                   Array.from(errorElements).forEach(element => {
                       element.innerText = '';
                   });
                   const errorMessage = document.getElementById('errorMessage');
        
        
               }
        
        
        
        
        function viewImage1(event) {
                   document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
               }
        
        
               function viewImage2(event) {
                   document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
               }
        
        
               function viewImage3(event) {
                   document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
               }
        
        
        
    const selectedImages = [];
    document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    function handleFileSelect(event) {
        const addedImagesContainer = document.getElementById("addedImagesContainer");
        addedImagesContainer.innerHTML = ""; 
        const files = event.target.files;
    
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            selectedImages.push(file);
    
            // Create thumbnail
            const thumbnail = document.createElement("div");
            thumbnail.classList.add("thumbnail");
    
            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt = "thumbnail";
            img.style.width = "50px";
            img.style.height = "auto";
    
            // Add remove icon
            const removeIcon = document.createElement("span");
            removeIcon.classList.add("remove-icon");
            removeIcon.innerHTML = "&times;";
            removeIcon.addEventListener("click", function () {
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages.splice(index, 1);
                    thumbnail.remove(); // Remove thumbnail from UI
                }
            });
    
            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addedImagesContainer.appendChild(thumbnail);
    
            // Create cropper for each image
            img.addEventListener("click", function () {
                viewImage(file, i); // Pass the file and index to viewImage
            });
        }
    }
    
    function viewImage(file, index) {
        let reader = new FileReader();
        reader.onload = function () {
            let dataURL = reader.result;
    
            // Create modal container
            const modalContainer = document.createElement('div');
            modalContainer.style.position = 'fixed';
            modalContainer.style.top = '0';
            modalContainer.style.left = '0';
            modalContainer.style.width = '100%';
            modalContainer.style.height = '100%';
            modalContainer.style.backgroundColor = 'rgba(0,0,0,0.7)';
            modalContainer.style.display = 'flex';
            modalContainer.style.justifyContent = 'center';
            modalContainer.style.alignItems = 'center';
            modalContainer.style.zIndex = '1000';
    
            // Create cropper container
            const cropperContainer = document.createElement('div');
            cropperContainer.style.backgroundColor = 'white';
            cropperContainer.style.padding = '20px';
            cropperContainer.style.borderRadius = '5px';
            cropperContainer.style.position = 'relative';
    
            // Create image element
            const image = document.createElement("img");
            image.src = dataURL;
            image.id = 'imgView' + index;
            image.style.maxWidth = '100%';
            image.style.maxHeight = '70vh';
            image.style.position = 'relative';
            image.style.cursor = 'crosshair';
    
            // Create save button
            const saveButton = document.createElement('button');
            saveButton.textContent = "Save Cropped Image";
            saveButton.style.marginTop = '10px';
            saveButton.style.padding = '5px 10px';
    
            // Create cancel button
            const cancelButton = document.createElement('button');
            cancelButton.textContent = "Cancel";
            cancelButton.style.marginTop = '10px';
            cancelButton.style.marginLeft = '10px';
            cancelButton.style.padding = '5px 10px';
    
            // Create overlay for selection
            const selectionBox = document.createElement('div');
            selectionBox.style.position = 'absolute';
            selectionBox.style.border = '2px dashed red';
            selectionBox.style.display = 'none'; // Hidden initially
    
            cropperContainer.appendChild(image);
            cropperContainer.appendChild(selectionBox);
            cropperContainer.appendChild(saveButton);
            cropperContainer.appendChild(cancelButton);
            modalContainer.appendChild(cropperContainer);
            document.body.appendChild(modalContainer);
    
            let startX, startY, endX, endY, isDragging = false;
    
            // Mouse events to draw selection
            image.onmousedown = function (e) {
                isDragging = true;
                startX = e.offsetX;
                startY = e.offsetY;
                selectionBox.style.left = startX + 'px';
                selectionBox.style.top = startY + 'px';
                selectionBox.style.width = '0px';
                selectionBox.style.height = '0px';
                selectionBox.style.display = 'block';
            };
    
            image.onmousemove = function (e) {
                if (isDragging) {
                    endX = e.offsetX;
                    endY = e.offsetY;
                    const width = endX - startX;
                    const height = endY - startY;
                    selectionBox.style.width = Math.abs(width) + 'px';
                    selectionBox.style.height = Math.abs(height) + 'px';
                    selectionBox.style.left = (width > 0 ? startX : endX) + 'px';
                    selectionBox.style.top = (height > 0 ? startY : endY) + 'px';
                }
            };
    
            image.onmouseup = function () {
                isDragging = false;
            };
    
            saveButton.onclick = function () {
                let canvas = document.createElement('canvas');
                let ctx = canvas.getContext('2d');
                let imgWidth = image.naturalWidth;
                let imgHeight = image.naturalHeight;
                let displayedWidth = image.clientWidth;
                let displayedHeight = image.clientHeight;
    
                // Calculate the scaling ratio
                const scaleX = imgWidth / displayedWidth;
                const scaleY = imgHeight / displayedHeight;
    
                // Crop region in terms of the natural image size
                const cropX = parseInt(selectionBox.style.left) * scaleX;
                const cropY = parseInt(selectionBox.style.top) * scaleY;
                const cropWidth = parseInt(selectionBox.style.width) * scaleX;
                const cropHeight = parseInt(selectionBox.style.height) * scaleY;
    
                canvas.width = cropWidth;
                canvas.height = cropHeight;
    
                ctx.drawImage(image, cropX, cropY, cropWidth, cropHeight, 0, 0, cropWidth, cropHeight);
    
                canvas.toBlob(blob => {
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;
                    let imgFile = new File([blob], fileName, { type: 'image/png' });
                    selectedImages[index] = imgFile; // Replace original image with cropped one
    
                    // Update thumbnail
                    const thumbnails = document.querySelectorAll('.thumbnail img');
                    thumbnails[index].src = URL.createObjectURL(imgFile);
    
                    // Update file input
                    const fileList = new DataTransfer();
                    selectedImages.forEach(img => fileList.items.add(img));
                    document.getElementById("imageInput").files = fileList.files;
    
                    modalContainer.remove(); // Remove modal after saving
                }, 'image/png');
            };
    
            cancelButton.onclick = function () {
                modalContainer.remove(); // Remove modal without saving
            };
        };
        reader.readAsDataURL(file);
    }    
    
    function deleteSingleImage(imageId, productId) {
        $.ajax({
            url: "/admin/deleteImage",
            method: 'POST',
            data: {
                imageNameToServer: imageId,
                productIdServer: productId
            },
            success: function (response) {
                if (response.status === true) {
                    location.reload(); // Reload the page to reflect changes
                } else {
                    console.error("Failed to delete image");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error deleting image:", error);
            }
        });
    }
    
              
           </script>
           
           <%- include('../../views/partials/admin/footer.ejs') %>