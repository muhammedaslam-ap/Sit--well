<%- include('../../views/partials/user/profileHeader.ejs') %>

<script src="https://cdn.tailwindcss.com"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
        .custom-swal-toast {
            border-radius: 10px;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
            color: #ffffff;
            font-family: 'Poppins', sans-serif;
            font-size: 14px;
            padding: 10px 20px;
        }
        .custom-swal-toast .swal2-icon {
            margin-right: 8px;
            font-size: 16px;
        }
        .swal2-toast .swal2-title {
            font-size: 16px;
            font-weight: bold;
            color: #ffffff;
        }

    </style>
    <% if (successMessage && successMessage.length) { %>
        <script>
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: '<%= successMessage ? "success" : "error" %>',
                title: '<%= successMessage || errorMessage %>',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                background: '<%= successMessage ? "linear-gradient(90deg, #56ab2f, #a8e063)" : "linear-gradient(90deg, #ff416c, #ff4b2b)" %>',
                customClass: {
                    popup: 'rounded-lg shadow-md',
                },
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
        </script>
    <% } %>

    <% if (errorMessage && errorMessage.length) { %>
        <script>
             Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: '<%= errorMessage %>',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            background: 'linear-gradient(90deg, #ff416c, #ff4b2b)', /* Gradient Background */
            customClass: {
                popup: 'custom-swal-toast',
            },
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });
        </script>
    <% } %>

    <div class="container mx-auto px-4 py-8">
        <div class="flex flex-col md:flex-row gap-8">
            <!-- Left: Scrollable List of Addresses -->
            <div class="w-full md:w-1/2 mt-24">
                <h3 class="text-2xl font-bold mb-4"><%= isEditing ? 'Edit Address' : 'Add New Address' %></h3>
                <div class="max-h-[400px] overflow-y-auto bg-white rounded-lg shadow p-4">
                    <% if (addresses && addresses.length && addresses[0] !== 0) { %>
                        <% addresses.forEach((address, index) => { %>
                            <div class="mb-4 p-4 bg-gray-50 rounded-lg">
                                <h5 class="font-bold"><%= address.addressType %> Address</h5>
                                <p class="mt-2">
                                    <strong>Name:</strong> <%= address.name %><br>
                                    <strong>Street Address:</strong> <%= address.addressLine1 %><br>
                                    <strong>Landmark:</strong> <%= address.landMark %><br>
                                    <strong>City:</strong> <%= address.city %><br>
                                    <strong>District:</strong> <%= address.district %><br>
                                    <strong>State:</strong> <%= address.state %><br>
                                    <strong>Pin Code:</strong> <%= address.pinCode %><br>
                                    <strong>Phone:</strong> <%= address.phone %><br>
                                    <strong>Alt Phone:</strong> <%= address.altPhone %><br>
                                </p>
                                <div class="flex justify-between mt-4">
                                    <a href="/editAddress/<%= address._id %>" class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600">Edit</a>
                                    <form action="/deleteAddress/<%= address._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this address?');">
                                        <button type="submit" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Delete</button>
                                    </form>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <p>No addresses found. Please add a new address below.</p>
                    <% } %>
                </div>
            </div>

            <!-- Right: Add New Address Form -->
            <div class="w-full md:w-1/2 mt-24">
                <h3 class="text-2xl font-bold mb-4">Add New Address</h3>
                <form action="<%= isEditing ? '/updateAddress/' + address._id : '/addAddress' %>" method="POST" class="space-y-4">
                    <!-- Name -->
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
                        <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="name" name="name" value="<%= address.name %>" required>
                        <div class="hidden text-red-500 text-sm mt-1">Please provide your full name.</div>
                    </div>

                    <!-- Landmark -->
                    <div>
                        <label for="landMark" class="block text-sm font-medium text-gray-700">Landmark</label>
                        <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="landMark" name="landMark" value="<%= address.landMark %>" required>
                        <div class="hidden text-red-500 text-sm mt-1">Please provide your landmark.</div>
                    </div>

                    <!-- Phone Number -->
                    <div>
                        <label for="phone" class="block text-sm font-medium text-gray-700">Phone Number</label>
                        <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="phone" name="phone" value="<%= address.phone %>" required>
                        <div class="hidden text-red-500 text-sm mt-1">Please provide a valid phone number.</div>
                    </div>

                    <!-- Alternate Phone Number -->
                    <div>
                        <label for="altPhone" class="block text-sm font-medium text-gray-700">Alternate Phone Number</label>
                        <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="altPhone" name="altPhone" value="<%= address.altPhone %>" required>
                        <div class="hidden text-red-500 text-sm mt-1">Please provide a valid alternate phone number.</div>
                    </div>

                    <!-- Address Line 1 (Street Address) -->
                    <div>
                        <label for="addressLine1" class="block text-sm font-medium text-gray-700">Street Address</label>
                        <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="addressLine1" name="addressLine1" value="<%= address.addressLine1 %>" required>
                        <div class="hidden text-red-500 text-sm mt-1">Please provide your street address.</div>
                    </div>

                    <!-- City and District -->
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label for="city" class="block text-sm font-medium text-gray-700">City</label>
                            <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="city" name="city" value="<%= address.city %>" required>
                            <div class="hidden text-red-500 text-sm mt-1">Please provide your city.</div>
                        </div>
                        <div>
                            <label for="district" class="block text-sm font-medium text-gray-700">District</label>
                            <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="district" name="district" value="<%= address.district %>" required>
                            <div class="hidden text-red-500 text-sm mt-1">Please provide your district.</div>
                        </div>
                    </div>

                    <!-- State and ZIP Code -->
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label for="state" class="block text-sm font-medium text-gray-700">State</label>
                            <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="state" name="state" value="<%= address.state %>" required>
                            <div class="hidden text-red-500 text-sm mt-1">Please provide your state.</div>
                        </div>
                        <div>
                            <label for="pinCode" class="block text-sm font-medium text-gray-700">Postcode/ZIP</label>
                            <input type="text" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="pinCode" name="pinCode" value="<%= address.pinCode %>" required>
                            <div class="hidden text-red-500 text-sm mt-1">Please provide a valid ZIP code.</div>
                        </div>
                    </div>

                    <!-- Address Type -->
                    <div>
                        <label for="addressType" class="block text-sm font-medium text-gray-700">Address Type</label>
                        <select class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" id="addressType" name="addressType" required>
                            <option value="">Choose...</option>
                            <option value="Home" <%= address.addressType === 'Home' ? 'selected' : '' %>>Home</option>
                            <option value="Work" <%= address.addressType === 'Work' ? 'selected' : '' %>>Work</option>
                            <option value="Other" <%= address.addressType === 'Other' ? 'selected' : '' %>>Other</option>
                        </select>
                        <div class="hidden text-red-500 text-sm mt-1">Please select an address type.</div>
                    </div>

                    <!-- Submit Button -->
                    <div>
                        <button type="submit" class="w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Form validation script (unchanged)
        document.querySelector('form').addEventListener('submit', function (e) {
            e.preventDefault();

            let isValid = true;

            // Reset all error messages
            document.querySelectorAll('.text-red-500').forEach(feedback => {
                feedback.classList.add('hidden');
            });

            // Helper function to show error
            function showError(inputId, errorMessage) {
                const inputField = document.getElementById(inputId);
                const errorField = inputField.nextElementSibling;
                errorField.textContent = errorMessage;
                errorField.classList.remove('hidden');
                inputField.classList.add('border-red-500');
                isValid = false;
            }

            // Helper function to check if input is empty or only whitespace
            function isEmptyOrWhitespace(value) {
                if (!value || value.trim().length === 0) {
                    return true;
                }
                return false;
            }

            // Get all form values
            const name = document.getElementById('name').value;
            const landMark = document.getElementById('landMark').value;
            const phone = document.getElementById('phone').value;
            const altPhone = document.getElementById('altPhone').value;
            const addressLine1 = document.getElementById('addressLine1').value;
            const city = document.getElementById('city').value;
            const district = document.getElementById('district').value;
            const state = document.getElementById('state').value;
            const pinCode = document.getElementById('pinCode').value;
            const addressType = document.getElementById('addressType').value;

            // Regular expressions for validation
            const phonePattern = /^[0-9]{10}$/;
            const pinPattern = /^[0-9]{6}$/;
            const namePattern = /^[A-Za-z\s]{2,50}$/;

            // Validate required fields and patterns
            if (isEmptyOrWhitespace(name)) {
                showError('name', 'Name cannot be empty or contain only spaces');
            } else if (!namePattern.test(name.trim())) {
                showError('name', 'Name should only contain letters (2-50 characters)');
            }

            if (isEmptyOrWhitespace(landMark)) {
                showError('landMark', 'Landmark cannot be empty or contain only spaces');
            }

            if (isEmptyOrWhitespace(phone)) {
                showError('phone', 'Phone number cannot be empty');
            } else if (!phonePattern.test(phone.trim())) {
                showError('phone', 'Please enter a valid 10-digit phone number');
            }

            if (altPhone && (!phonePattern.test(altPhone.trim()))) {
                showError('altPhone', 'Please enter a valid 10-digit alternate phone number');
            }

            if (isEmptyOrWhitespace(addressLine1)) {
                showError('addressLine1', 'Street address cannot be empty or contain only spaces');
            }

            if (isEmptyOrWhitespace(city)) {
                showError('city', 'City cannot be empty or contain only spaces');
            }

            if (isEmptyOrWhitespace(district)) {
                showError('district', 'District cannot be empty or contain only spaces');
            }

            if (isEmptyOrWhitespace(state)) {
                showError('state', 'State cannot be empty or contain only spaces');
            }

            if (isEmptyOrWhitespace(pinCode)) {
                showError('pinCode', 'PIN code cannot be empty');
            } else if (!pinPattern.test(pinCode.trim())) {
                showError('pinCode', 'Please enter a valid 6-digit PIN code');
            }

            if (!addressType || addressType === "Choose...") {
                showError('addressType', 'Please select an address type');
            }

            // Real-time validation
            const inputs = document.querySelectorAll('input, select');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    const errorField = this.nextElementSibling;
                    
                    if (isEmptyOrWhitespace(this.value)) {
                        this.classList.add('border-red-500');
                        errorField.textContent = 'This field cannot be empty or contain only spaces';
                        errorField.classList.remove('hidden');
                    } else {
                        this.classList.remove('border-red-500');
                        errorField.classList.add('hidden');
                    }

                    // Additional validation for specific fields
                    if (this.id === 'phone' || this.id === 'altPhone') {
                        if (this.value && !phonePattern.test(this.value.trim())) {
                            this.classList.add('border-red-500');
                            errorField.textContent = 'Please enter a valid 10-digit phone number';
                            errorField.classList.remove('hidden');
                        }
                    }

                    if (this.id === 'pinCode') {
                        if (this.value && !pinPattern.test(this.value.trim())) {
                            this.classList.add('border-red-500');
                            errorField.textContent = 'Please enter a valid 6-digit PIN code';
                            errorField.classList.remove('hidden');
                        }
                    }
                });
            });

            if (!isValid) {
                e.preventDefault();
                return false;
            }

            // If everything is valid, submit the form
            if (isValid) {
                return true;
            }
        });
    </script>

    <%- include('../../views/partials/user/profileFooter.ejs') %>