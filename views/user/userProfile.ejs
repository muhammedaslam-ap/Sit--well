<%- include('../../views/partials/user/profileHeader.ejs') %>

<div class="min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-3xl mx-auto">
    <div class="bg-white shadow-2xl rounded-lg overflow-hidden">
      <div class="bg-gradient-to-r from-pink-500 to-purple-600 h-32"></div>
      <div class="px-4 py-5 sm:p-6">
        <div class="sm:flex sm:items-center sm:justify-between">
          <div class="sm:flex sm:space-x-5">
            <div class="flex-shrink-0">
              <img class="mx-auto h-20 w-20 rounded-full border-4 border-white -mt-10 shadow-lg" src="https://ui-avatars.com/api/?name=<%= user.name %>&background=random" alt="<%= user.name %>">
            </div>
            <div class="mt-4 text-center sm:mt-0 sm:pt-1 sm:text-left">
              <p class="text-xl font-bold text-gray-900 sm:text-2xl"><%= user.name %></p>
              <p class="text-sm font-medium text-gray-600"><%= user.email %></p>
            </div>
          </div>
        </div>
        
        <div class="mt-6 border-t border-gray-200 pt-6">
          <h2 class="text-2xl font-semibold text-gray-900 mb-6">Account Details</h2>
          <form id="accountForm" action="/update-profile" method="post">
            <div class="grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4">
              <div>
                <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
                <input type="text" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" id="name" name="name" value="<%= user.name %>" required pattern="^[A-Za-z\s]{2,50}$" title="Name should only contain letters and spaces (2-50 characters).">
                <div class="invalid-feedback hidden text-red-500 text-sm mt-1">
                  Please enter a valid name (letters and spaces only, 2-50 characters).
                </div>
              </div>
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                <input type="email" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-100 text-gray-500 sm:text-sm" id="email" name="email" value="<%= user.email %>" readonly required>
              </div>
            </div>
            <div class="mt-6">
              <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out transform hover:scale-105">
                Update Account Details
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include('../../views/partials/user/profileFooter.ejs') %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
        .custom-swal-toast {
            border-radius: 10px;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
            color: #ffffff;
            font-family: 'Poppins', sans-serif;
            font-size: 14px;
            padding: 10px 20px;
        }
        .custom-swal-toast .swal2-icon {
            margin-right: 8px;
            font-size: 16px;
        }
        .swal2-toast .swal2-title {
            font-size: 16px;
            font-weight: bold;
            color: #ffffff;
        }

    </style>
  <% if (typeof updateSuccess !== 'undefined' && updateSuccess) { %>
    <script>
      Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'success',
          title: 'Profile Updated',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
          background: 'linear-gradient(90deg, #56ab2f, #a8e063)', /* Gradient Background */
          customClass: {
              popup: 'custom-swal-toast',
          },
          didOpen: (toast) => {
              toast.addEventListener('mouseenter', Swal.stopTimer);
              toast.addEventListener('mouseleave', Swal.resumeTimer);
          }
      });
  </script>
<% } %>

<% if (errorMessage && errorMessage.length) { %>
    <script>
        Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: '<%= errorMessage %>',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true
        });
    </script>
<% } %>


<script>
  document.getElementById('name').addEventListener('input', function () {
    const nameField = this;
    const namePattern = /^[A-Za-z\s]{2,50}$/;
    const invalidFeedback = nameField.nextElementSibling;

    if (!namePattern.test(nameField.value)) {
      nameField.classList.add('border-red-500');
      invalidFeedback.classList.remove('hidden');
    } else {
      nameField.classList.remove('border-red-500');
      invalidFeedback.classList.add('hidden');
    }
  });

  document.querySelector('form').addEventListener('submit', function (event) {
    const nameField = document.getElementById('name');
    const namePattern = /^[A-Za-z\s]{2,50}$/;
    const invalidFeedback = nameField.nextElementSibling;

    if (!nameField.value.trim()) {
      event.preventDefault();
      nameField.classList.add('border-red-500');
      invalidFeedback.classList.remove('hidden');
      invalidFeedback.textContent = 'Name cannot be empty.';
    } else if (!namePattern.test(nameField.value)) {
      event.preventDefault();
      nameField.classList.add('border-red-500');
      invalidFeedback.classList.remove('hidden');
      invalidFeedback.textContent = 'Please enter a valid name (letters and spaces only, 2-50 characters).';
    } else {
      nameField.classList.remove('border-red-500');
      invalidFeedback.classList.add('hidden');
    }
  });
</script>


